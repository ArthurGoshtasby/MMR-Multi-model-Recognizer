First, Using the provided user interface, combine the datasets in the Datasets/Training directory into a file such as 'trainDataset'. Then, use this dataset as the training dataset to train each of the four models with the provided interface. Save the trained models in the 'Models' directory. Next, use the 'testDataset' created similarly to find the accuracy of each model. Finally, precede the name of each trained model by 100xaccuracy (percent correct recognition of the model when using the 'testDataset'). For example, if the model's accuracy is 0.81 and the model's name is 'modelname.h5', change the model's name to '81_modelname.h5'. Recognition accuracies of the models are used as weights to predict the labels of new objects (coins, in our case) in an image or dataset.

After segmenting an image into coins and labeling them interactively using the provided interface, the coins and their labels are saved to be used later to determine a model's recognition accuracy. An augmented dataset containing different orientations of the detected coins and their labels are also saved and used later to train each model. From each image a test dataset and a training dataset are created. Note that the test dataset is much smaller than the training dataset obtained from the same image. When combining the test datasets and the training datasets into larger test and training datasets, make sure the two datasets do not overlap. That is, if the test dataset of an image is included in the larger test dataset, make sure the training dataset obtained from that image is not included in the larger training dataset.
